ext.getOpenCvPlatformPackage = { ->
  return "linux-arm-raspbian"
}

task downloadOpenCv() {
    description = 'Downloads the OpenCV Native maven dependency.'
    group = 'WPILib'
    def depFolder = "$buildDir/dependencies"
    def cvZip = file("$depFolder/opencv.zip")
    outputs.file(cvZip)
    def armOpenCv

    doFirst {
        def classifier = getOpenCvPlatformPackage()
        def armOpenCvDependency = project.dependencies.create("org.opencv:opencv-jni:3.1.0:$classifier@jar")
        def armOpenCvConfig = project.configurations.detachedConfiguration(armOpenCvDependency)
        armOpenCvConfig.setTransitive(false)
        armOpenCv = armOpenCvConfig.files[0].canonicalFile
    }

    doLast {
        copy {
            from armOpenCv
            rename 'opencv(.+)', 'opencv.zip'
            into depFolder
        }
    }
}

ext.nativesLocation = "$buildDir/native"
ext.v4l4jLocation = "libs/native"

task copyV4l4J(type: Copy) {
  description = 'Copies V4l4J Natives into nativesLocation'
  from v4l4jLocation
  into nativesLocation
}

// Create a task that will unzip the wpiutil files into a temporary build directory
task unzipOpenCv(type: Copy) {
    description = 'Unzips the wpiutil maven dependency so that the include files and libraries can be used'
    group = 'WPILib'
    dependsOn downloadOpenCv

    from zipTree(downloadOpenCv.outputs.files.singleFile)
    into nativesLocation
}
